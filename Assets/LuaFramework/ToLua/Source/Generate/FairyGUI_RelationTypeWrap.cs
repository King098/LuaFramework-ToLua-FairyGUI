//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_RelationTypeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(FairyGUI.RelationType));
		L.RegVar("Left_Left", get_Left_Left, null);
		L.RegVar("Left_Center", get_Left_Center, null);
		L.RegVar("Left_Right", get_Left_Right, null);
		L.RegVar("Center_Center", get_Center_Center, null);
		L.RegVar("Right_Left", get_Right_Left, null);
		L.RegVar("Right_Center", get_Right_Center, null);
		L.RegVar("Right_Right", get_Right_Right, null);
		L.RegVar("Top_Top", get_Top_Top, null);
		L.RegVar("Top_Middle", get_Top_Middle, null);
		L.RegVar("Top_Bottom", get_Top_Bottom, null);
		L.RegVar("Middle_Middle", get_Middle_Middle, null);
		L.RegVar("Bottom_Top", get_Bottom_Top, null);
		L.RegVar("Bottom_Middle", get_Bottom_Middle, null);
		L.RegVar("Bottom_Bottom", get_Bottom_Bottom, null);
		L.RegVar("Width", get_Width, null);
		L.RegVar("Height", get_Height, null);
		L.RegVar("LeftExt_Left", get_LeftExt_Left, null);
		L.RegVar("LeftExt_Right", get_LeftExt_Right, null);
		L.RegVar("RightExt_Left", get_RightExt_Left, null);
		L.RegVar("RightExt_Right", get_RightExt_Right, null);
		L.RegVar("TopExt_Top", get_TopExt_Top, null);
		L.RegVar("TopExt_Bottom", get_TopExt_Bottom, null);
		L.RegVar("BottomExt_Top", get_BottomExt_Top, null);
		L.RegVar("BottomExt_Bottom", get_BottomExt_Bottom, null);
		L.RegVar("Size", get_Size, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
		TypeTraits<FairyGUI.RelationType>.Check = CheckType;
		StackTraits<FairyGUI.RelationType>.Push = Push;
	}

	static void Push(IntPtr L, FairyGUI.RelationType arg)
	{
		ToLua.Push(L, arg);
	}

	static bool CheckType(IntPtr L, int pos)
	{
		return TypeChecker.CheckEnumType(typeof(FairyGUI.RelationType), L, pos);
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Left_Left(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Left_Left);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Left_Center(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Left_Center);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Left_Right(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Left_Right);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Center_Center(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Center_Center);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Right_Left(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Right_Left);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Right_Center(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Right_Center);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Right_Right(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Right_Right);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Top_Top(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Top_Top);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Top_Middle(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Top_Middle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Top_Bottom(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Top_Bottom);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Middle_Middle(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Middle_Middle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bottom_Top(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Bottom_Top);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bottom_Middle(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Bottom_Middle);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Bottom_Bottom(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Bottom_Bottom);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Width(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Width);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Height(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Height);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LeftExt_Left(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.LeftExt_Left);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LeftExt_Right(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.LeftExt_Right);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightExt_Left(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.RightExt_Left);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RightExt_Right(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.RightExt_Right);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TopExt_Top(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.TopExt_Top);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TopExt_Bottom(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.TopExt_Bottom);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BottomExt_Top(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.BottomExt_Top);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BottomExt_Bottom(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.BottomExt_Bottom);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Size(IntPtr L)
	{
		ToLua.Push(L, FairyGUI.RelationType.Size);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		FairyGUI.RelationType o = (FairyGUI.RelationType)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

