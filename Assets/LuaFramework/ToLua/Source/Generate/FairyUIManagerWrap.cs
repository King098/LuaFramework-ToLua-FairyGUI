//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyUIManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyUIManager), typeof(System.Object));
		L.RegFunction("CheckUIMode", CheckUIMode);
		L.RegFunction("ShowPage", ShowPage);
		L.RegFunction("LoadUI", LoadUI);
		L.RegFunction("HideCurrPage", HideCurrPage);
		L.RegFunction("HidePage", HidePage);
		L.RegFunction("CloseAllPages", CloseAllPages);
		L.RegFunction("New", _CreateFairyUIManager);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("allPages", get_allPages, set_allPages);
		L.RegVar("stackPages", get_stackPages, set_stackPages);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyUIManager(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyUIManager obj = new FairyUIManager();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyUIManager.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckUIMode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
			FairyUI arg0 = (FairyUI)ToLua.CheckObject<FairyUI>(L, 2);
			obj.CheckUIMode(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.ShowPage(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadUI(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 4 && TypeChecker.CheckTypes<System.Action<FairyGUI.GObject>>(L, 4))
			{
				FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				System.Action<FairyGUI.GObject> arg2 = (System.Action<FairyGUI.GObject>)ToLua.ToObject(L, 4);
				obj.LoadUI(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4 && TypeChecker.CheckTypes<LuaInterface.LuaFunction>(L, 4))
			{
				FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
				string arg0 = ToLua.CheckString(L, 2);
				string arg1 = ToLua.CheckString(L, 3);
				LuaFunction arg2 = ToLua.ToLuaFunction(L, 4);
				obj.LoadUI(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: FairyUIManager.LoadUI");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HideCurrPage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
			bool o = obj.HideCurrPage();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HidePage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.HidePage(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CloseAllPages(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			FairyUIManager obj = (FairyUIManager)ToLua.CheckObject<FairyUIManager>(L, 1);
			obj.CloseAllPages();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_allPages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyUIManager obj = (FairyUIManager)o;
			System.Collections.Generic.Dictionary<string,FairyUI> ret = obj.allPages;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allPages on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stackPages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyUIManager obj = (FairyUIManager)o;
			System.Collections.Generic.Stack<FairyUI> ret = obj.stackPages;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stackPages on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, FairyUIManager.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_allPages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyUIManager obj = (FairyUIManager)o;
			System.Collections.Generic.Dictionary<string,FairyUI> arg0 = (System.Collections.Generic.Dictionary<string,FairyUI>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<string,FairyUI>));
			obj.allPages = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index allPages on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stackPages(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyUIManager obj = (FairyUIManager)o;
			System.Collections.Generic.Stack<FairyUI> arg0 = (System.Collections.Generic.Stack<FairyUI>)ToLua.CheckObject<System.Collections.Generic.Stack<FairyUI>>(L, 2);
			obj.stackPages = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stackPages on a nil value");
		}
	}
}

