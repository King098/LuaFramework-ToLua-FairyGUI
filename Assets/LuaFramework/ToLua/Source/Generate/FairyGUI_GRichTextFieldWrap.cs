//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class FairyGUI_GRichTextFieldWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(FairyGUI.GRichTextField), typeof(FairyGUI.GTextField));
		L.RegFunction("New", _CreateFairyGUI_GRichTextField);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("richTextField", get_richTextField, null);
		L.RegVar("emojies", get_emojies, set_emojies);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateFairyGUI_GRichTextField(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				FairyGUI.GRichTextField obj = new FairyGUI.GRichTextField();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: FairyGUI.GRichTextField.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_richTextField(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GRichTextField obj = (FairyGUI.GRichTextField)o;
			FairyGUI.RichTextField ret = obj.richTextField;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index richTextField on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_emojies(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GRichTextField obj = (FairyGUI.GRichTextField)o;
			System.Collections.Generic.Dictionary<uint,FairyGUI.Emoji> ret = obj.emojies;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index emojies on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_emojies(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			FairyGUI.GRichTextField obj = (FairyGUI.GRichTextField)o;
			System.Collections.Generic.Dictionary<uint,FairyGUI.Emoji> arg0 = (System.Collections.Generic.Dictionary<uint,FairyGUI.Emoji>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.Dictionary<uint,FairyGUI.Emoji>));
			obj.emojies = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index emojies on a nil value");
		}
	}
}

